{"version":3,"file":"column.component.js","sourceRoot":"","sources":["../../src/components/column.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAU,MAAM,eAAe,CAAC;AAQvE;IAHA;QAOa,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAOlB,YAAO,GAAG,IAAI,CAAC;QAWhB,qBAAgB,GAAG,EAAE,CAAC,CAAC,gBAAgB;IAqBnD,CAAC;IA3BG,sCAAY,GAAZ,UAAa,GAAiB,EAAE,KAAa;QACzC,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YAC/B,OAAsB,IAAI,CAAC,UAAW,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtE;IACL,CAAC;IAID,kCAAQ,GAAR;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,wCAAc,GAAtB;;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YACnC,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aAC7E;SACJ;QAED,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,gBAAgB;gBACjB,GAAC,IAAI,CAAC,UAAU,IAAG,IAAI;mBAC1B,CAAC;SACL;IACL,CAAC;IAxCQ;QAAR,KAAK,EAAE;;mDAAgB;IACf;QAAR,KAAK,EAAE;;qDAAkB;IACjB;QAAR,KAAK,EAAE;;sDAAmB;IAClB;QAAR,KAAK,EAAE;;qDAAkB;IACjB;QAAR,KAAK,EAAE;;uDAAoB;IACnB;QAAR,KAAK,EAAE;;uDAA0B;IAGzB;QAAR,KAAK,EAAE;;kDAAwB;IACvB;QAAR,KAAK,EAAE;;oDAAgB;IAEO;QAA9B,YAAY,CAAC,eAAe,CAAC;;yDAAc;IACX;QAAhC,YAAY,CAAC,iBAAiB,CAAC;;2DAAgB;IAfvC,eAAe;QAH3B,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;OACW,eAAe,CA4C3B;IAAD,sBAAC;CAAA,AA5CD,IA4CC;SA5CY,eAAe","sourcesContent":["import { Directive, Input, ContentChild, OnInit } from '@angular/core';\nimport { DataTableRow } from './row.component';\nimport { CellCallback } from './types';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumn implements OnInit {\n\n    // init:\n    @Input() header: string;\n    @Input() sortable = false;\n    @Input() resizable = false;\n    @Input() property: string;\n    @Input() styleClass: string;\n    @Input() cellColors: CellCallback;\n\n    // init and state:\n    @Input() width: number | string;\n    @Input() visible = true;\n\n    @ContentChild('dataTableCell') cellTemplate;\n    @ContentChild('dataTableHeader') headerTemplate;\n\n    getCellColor(row: DataTableRow, index: number) {\n        if (this.cellColors !== undefined) {\n            return (<CellCallback>this.cellColors)(row.item, row, this, index);\n        }\n    }\n\n    private styleClassObject = {}; // for [ngClass]\n\n    ngOnInit() {\n        this._initCellClass();\n    }\n\n    private _initCellClass() {\n        if (!this.styleClass && this.property) {\n            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n                this.styleClass = 'column-' + this.property;\n            } else {\n                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n            }\n        }\n\n        if (this.styleClass != null) {\n            this.styleClassObject = {\n                [this.styleClass]: true\n            };\n        }\n    }\n}\n"]}